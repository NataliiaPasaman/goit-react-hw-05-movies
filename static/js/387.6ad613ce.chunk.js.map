{"version":3,"file":"static/js/387.6ad613ce.chunk.js","mappings":"iQACaA,EAAWC,EAAAA,GAAAA,GAAH,mKAQRC,EAAWD,EAAAA,GAAAA,GAAH,4DAKRE,EAAeF,EAAAA,GAAAA,IAAH,uDAKZG,EAAaH,EAAAA,GAAAA,IAAH,uEAMVI,EAAYJ,EAAAA,GAAAA,GAAH,+GAQTK,EAAUL,EAAAA,GAAAA,EAAH,oI,SCkBpB,EApCa,SAAC,GAAiB,IAAfM,EAAc,EAAdA,QACZ,GAAyBC,EAAAA,EAAAA,UAAS,MAAlC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KASA,IAPAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXE,EAAAA,EAAAA,IAAoBP,EAAS,WAAWQ,MAAK,SAAAC,GAAI,OAAIN,EAAQM,EAAKC,KAAjB,IAChDC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,EAAMG,QAA7B,IACNC,SAAQ,kBAAMX,GAAW,EAAjB,GACV,GAAE,CAACL,IAECE,EACL,OACE,gCACCE,IAAW,SAACa,EAAA,EAAD,IACM,IAAjBf,EAAMgB,SACP,SAACnB,EAAD,yDAEA,SAACN,EAAD,UACGS,EAAMiB,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aACjC,OACE,UAAC3B,EAAD,YACE,SAACC,EAAD,WACA,SAACC,EAAD,CACA0B,IAAKD,EAAY,UAAME,EAAAA,GAAN,YAAyBF,GAAiBG,EAAAA,GAC3DC,IAAKN,OAEL,SAACtB,EAAD,UAAYsB,GAAQC,MANPD,EASlB,QAIR,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from \"styled-components\";\nexport const CastList = styled.ul`\ndisplay: grid;\ngrid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\ngrid-gap: 20px;\npadding-top: 20px;\npadding-bottom: 10px;\n`;\n\nexport const CastItem = styled.li`\nborder-radius: 2px;\nwidth: 200px;\n`;\n\nexport const ImageWrapper = styled.div`\nwidth: 200px;\nheight: 300px;\n`\n\nexport const PosterCast = styled.img`\ndisplay: block;\nwidth: 200px;\nheight: auto;\n`;\n\nexport const TitleCast = styled.h4`\npadding: 10px;\ncolor: black;\nfont-weight: 700;\nfont-size: 16px;\nline-height: 1.4;\n`;\n\nexport const NoCasts = styled.p`\nmargin-top: 25px;\npadding: 10px;\nfont-size: 28px;\nfont-weight: 700;\ncolor: Coral;\ntext-align: center;\n`;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { useState, useEffect } from 'react';\nimport { getMovieCastReviews } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { BASE_POSTER_URL } from 'constans/constans';\nimport { \n  PosterCast, \n  TitleCast, \n  CastList, \n  CastItem, \n  ImageWrapper, \n  NoCasts } from './Cast.styled';\nimport { DEFAULT_IMAGE } from 'constans/constans';\n\nconst Cast = ({ movieId }) => {\n    const [casts, setCast] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n      setLoading(true);\n      getMovieCastReviews(movieId, 'credits').then(data => setCast(data.cast))\n      .catch((error) => console.log(error.message))\n      .finally(() => setLoading(false));\n    }, [movieId])\n\n    if (!casts) return;\n    return (\n      <>\n      {loading && <Loader />}\n      {casts.length === 0 && (\n      <NoCasts>Sorry, we don't find casts for this movie</NoCasts>\n      )}\n      <CastList>\n        {casts.map(({ name, original_name, profile_path }) => {\n          return (\n            <CastItem key={name}>\n              <ImageWrapper>\n              <PosterCast \n              src={profile_path ? `${BASE_POSTER_URL}/${profile_path}` : DEFAULT_IMAGE} \n              alt={name} />\n              </ImageWrapper>\n              <TitleCast>{name || original_name}</TitleCast>\n            </CastItem>\n          );\n        })}\n      </CastList>\n      </>\n    );\n}\n\nexport default Cast;\n\nCast.propTypes = {\n  movieId: PropTypes.string.isRequired,\n}"],"names":["CastList","styled","CastItem","ImageWrapper","PosterCast","TitleCast","NoCasts","movieId","useState","casts","setCast","loading","setLoading","useEffect","getMovieCastReviews","then","data","cast","catch","error","console","log","message","finally","Loader","length","map","name","original_name","profile_path","src","BASE_POSTER_URL","DEFAULT_IMAGE","alt"],"sourceRoot":""}