{"version":3,"file":"static/js/779.392e239a.chunk.js","mappings":"sPAEaA,EAAcC,EAAAA,GAAAA,GAAH,gFAMXC,EAAcD,EAAAA,GAAAA,GAAH,0FAQXE,EAAWF,EAAAA,GAAAA,GAAH,2IASRG,EAAcH,EAAAA,GAAAA,EAAH,8IASXI,EAAYJ,EAAAA,GAAAA,EAAH,oI,SCgBtB,EArCgB,SAAC,GAAiB,IAAfK,EAAc,EAAdA,QACjB,GAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAWA,IATAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXE,EAAAA,EAAAA,IAAoBP,EAAS,WAAWQ,MAAK,SAAAC,GAAI,OAC/CN,EAAWM,EAAKC,QAD+B,IAGhDC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,EAAMG,QAA7B,IACNC,SAAQ,kBAAMX,GAAW,EAAjB,GACV,GAAE,CAACL,IAECE,EAEL,OACE,gCACCE,IAAW,SAACa,EAAA,EAAD,IACQ,IAAnBf,EAAQgB,SACP,SAACnB,EAAD,iEAECG,IACC,SAACR,EAAD,UACGQ,EAAQiB,KAAI,YAAkC,IAA/BC,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,QAC9B,OACE,UAACzB,EAAD,YACE,UAACC,EAAD,oBAAiBuB,EAAeE,aAChC,SAACxB,EAAD,UAAcuB,MAFED,EAAeE,SAKpC,QAKV,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ListReviews = styled.ul`\npadding: 8px;\nmargin-top: 20px;\nmargin-bottom: 10px;\n`;\n\nexport const ItemReviews = styled.li`\nmargin-bottom: 25px;\n\n&:last-child {\n    margin-bottom: 0;\n}\n`;\n\nexport const Username = styled.h4`\nmargin-bottom: 10px;\nfont-size: 22px;\nfont-weight: 700;\nline-height: 1.5;\ntext-indent: 2%;\n// color: tomato;\n`;\n\nexport const PostReviews = styled.p`\nfont-size: 16px;\nfont-weight: 500;\nline-height: 1.8;\ntext-indent: 4%;\nwhite-space: normal;\ntext-align: justify;\n`;\n\nexport const NoReviews = styled.p`\nmargin-top: 25px;\npadding: 10px;\nfont-size: 28px;\nfont-weight: 700;\ncolor: Coral;\ntext-align: center;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { getMovieCastReviews } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  ListReviews,\n  ItemReviews,\n  Username,\n  PostReviews, \n  NoReviews\n} from './Reviews.styled';\n\nconst Reviews = ({ movieId }) => {\n  const [reviews, SetReviews] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieCastReviews(movieId, 'reviews').then(data =>\n      SetReviews(data.results)\n    )\n    .catch((error) => console.log(error.message))\n    .finally(() => setLoading(false));\n  }, [movieId]);\n\n  if (!reviews) return;\n\n  return (\n    <>\n    {loading && <Loader />}\n    {reviews.length === 0 && (\n      <NoReviews>Sorry, but there are no reviews for this movie yet</NoReviews>\n      )}\n      {reviews && (\n        <ListReviews>\n          {reviews.map(({ author_details, content }) => {\n            return (\n              <ItemReviews key={author_details.username}>\n                <Username>User: {author_details.username}</Username>\n                <PostReviews>{content}</PostReviews>\n              </ItemReviews>\n            );\n          })}\n        </ListReviews>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n"],"names":["ListReviews","styled","ItemReviews","Username","PostReviews","NoReviews","movieId","useState","reviews","SetReviews","loading","setLoading","useEffect","getMovieCastReviews","then","data","results","catch","error","console","log","message","finally","Loader","length","map","author_details","content","username"],"sourceRoot":""}